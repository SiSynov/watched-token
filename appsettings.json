{
  "SniperConfiguration": {
    // Accounts
    "WalletPrivateKey": "e96a285a6705507fa66652d5678204f899f64ac3ec9bd0fcb27379f024344397",
    "BlockExplorerApiKey": "9YTC71PUUQAN9W9H1KK1AAHBVBGDVRV9X8",
    // Node
    "NodeAddressHttp": "http://127.0.0.1:8545",
    "NodeAddressWss": "ws://127.0.0.1:8546",
    "GetContractSourceUrl": "https://api.bscscan.com/api?module=contract&action=getsourcecode&address={0}&apikey={1}",
    "NativeTokenSymbol": "BNB",
    // DEX
    "ExchangeRouterAddress": "0x10ed43c718714eb63d5aa57b78b54704e256024e",
    "LiquidityTokens": [
      "0xe9e7cea3dedca5984780bafc599bd69add087d56", // BUSD
      "0x55d398326f99059fF775485246999027B3197955", // USDT
      "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d", // USDC
    ],
    "AlwaysIncludeBaseTokenInLiquidityTokens": true,
    // Global settings
    "TransactionRevertTimeSeconds": 30,
    "MonitorPricesEverySeconds": 5,
    "WatchTokensInterval": 2,
    // Simulation mode
    "SimulationMode": false,
    "SimulationModeWalletBalance": 2,
    "SimulationModeBuyDelay": 3,
    "SimulationModeApproveDelay": 3,
    "SimulationModeSellDelay": 3,
    // Snipers
    "WatchedTokensSniper": true,
    "TelegramSniper": false,
    "PairCreatedEventSniper": false,
    "AddLiquiditySniperBlocks": false,
    "AddLiquiditySniperMempool": false,
    "TransactionSniperBlocks": false,
    "TransactionSniperMempool": false,
    "EventSniper": false,
    "PairCreatedEventSniperParametersSet": "default",
    "AddLiquiditySniperBlocksParametersSet": "default",
    "AddLiquiditySniperMempoolParametersSet": "mempool",
    "AddLiquiditySniperMempoolMaxGasPrice": 30,
    "AddLiquiditySniperMempoolGasPriceAdjustment": 0,
    // Buy settings
    "BuyEnabled": true,
    "MinWalletBalance": 0.01,
    "OnlyBuyWhitelisted": false,
    // Sell settings
    "SellEnabled": true,
    "MempoolRemoveLiquidityEmergencySell": false,
    "EmergencySellGasPriceAdjustment": 1,
    "EmergencySellMaxGasPrice": 20,
    "EmergencySellSlippage": 75,
    // White/Black Listing
    "WhitelistedTokens": [
      ""
    ],
    "BlacklistedTokens": [
      
    ],
    "BlacklistedTokenSymbols": [
      // Uncomment and/or add more
      // "test",
      // "elon",
      // "musk",
      // "doge",
      // "shiba",
      // "floki",
      // "satoshi"
    ],
    "BlacklistedTokenNames": [
      // Uncomment and/or add more
      // "test",
      // "elon",
      // "musk",
      // "doge",
      // "shiba",
      // "floki",
      // "satoshi"
    ],
    "ContractRedFlagStrings": [
      "transfer(owner()",
      "cannot permit dev address",
      "_previousOwner",
      "_miniarchery",
      "_excludeDevAddress",
      "msg.sender == minter",
      "S_Bot",
      "R_Bot"
    ],
    "ParametersSets": {
      "default": {
        // Gas settings
        "BuyGasPrice": 10,
        "ApproveGasPrice": 6,
        "SellGasPrice": 7,
        "BuyGasAmount": 1000000,
        "ApproveGasAmount": 100000,
        "SellGasAmount": 2000000,
        "EstimateGasOnBuy": true,
        "EstimateGasOnSell": true,
        // Buy settings
        "BuyEnabled": true,
        "AmountToSnipe": 0.021,
        "AlwaysFindBestLiquidityPair": true,
        "AuditTokens": true,
        "HoneypotCheckEnabled": true,
        "CheckContract": true,
        "CheckLiquidity": true,
        "MaxBuyTax": 10,
        "MaxSellTax": 15,
        "MaxTotalTax": 20,
        "MaxDrawdown": 50,
        "MinBuyTax": 0,
        "MinSellTax": 0,
        "MinTotalTax": 0,        
        "MinLiquidityInBaseTokens": 1,
        "MaxLiquidityInBaseTokens": -1,
        "MinLiquidityPercentage": 0,
        "MinNewAddedLiquidityPercentage": 0,
        "BuyDelaySeconds": 0,
        "UseSafeBuyContract": false,
        "SafeBuyCheckHoneypot": true,
        "SafeBuyCheckMinLiquidity": true,
        "SafeBuyCheckMaxLiquidity": true,
        "SafeBuyCheckMaxTaxAndPriceImpact": true,
        "SafeBuyMaxTaxAndPriceImpact": 25,
        // Sell settings
        "SellEnabled": true,
        "TakeProfit": 100,
        "StopLoss": 50,
        "StopLossBasedOnDrawdown": true,
        "StopLossBasedOnDrawdownMargin": 10,
        "TrailingStopStrategy": "none",
        "TrailingStopActivationThreshold": 25,
        "TrailingStopThreshold": 16,
        "TrailingStopDistance": 15,
        "SellSlippage": 25,
        "DontSellBeforeMinutes":1,
        "SellAfterMinutes":-1,
        "SellIfTrailingStopNotChangedInMinutes": -1,
        "ApplySellGasTaxToProfitEstimations": true,
        "RecheckSellGasTaxMinutes": 5,
        "ApprovalMethod": "check",
        "WaitForApproval": false
      },
      "coingecko": {
        "AmountToSnipe": 0.03
      },
      "shitcoin": {
        "AmountToSnipe": 0.02,
        "BuyGasPrice": 5.5,
        "ApproveGasPrice": 5,
        "SellGasPrice": 5,
        "TrailingStopStrategy": "buy",
        "TrailingStopActivationThreshold": 15,
        "TrailingStopDistance": 10,
        "TrailingStopThreshold": 11,
        "SellAfterMinutes": 120,
        "SellIfTrailingStopNotChangedInMinutes": 30,
        "MinLiquidityAmount": 2,
        "MaxBuyTax": 15,
        "MaxSellTax": 20,
        "MaxTotalTax": 25
      },
      "mempool": {
        "AmountToSnipe": 0.01,
        // Audits will frequently fail when sniping on the mempool
        // as we'll probably check before the liquidity addition tx is confirmed
        // Besides, we don't want to waste time; we want to submit our tx as soon
        // as possible for a better chance of it being mined close to the
        // triggering transaction
        "AuditTokens": false,
        // We can use the safe-buy contract instead
        "UseSafeBuyContract": false
      }
    },
    // Telegram Sniper
    "TelegramApiId": "",
    "TelegramApiHash": "",
    "TelegramApiPhoneNo": "",
    "TelegramSilenceChannelsList": false,
    "TelegramListenerConfiguration": [
      {
        "RuleName": "CMC_fastest_alerts",
        "ChatId": "CMC_fastest_alerts",
        "RequiredText": [
          "(first pump)",
          "BSC",
          "BNB"
        ],
        "ExcludeText": [],
        "UseAddressNumber": 1,
        "ParametersSet": "default"
      },
      {
        "RuleName": "CG_fastest_alerts",
        "ChatId": "CG_fastest_alerts",
        "RequiredText": [
          "(first pump)",
          "BSC",
          "BNB"
        ],
        "ExcludeText": [],
        "UseAddressNumber": 1,
        "ParametersSet": "coingecko"
      },
      {
        "RuleName": "Some shitcoins calls channel",
        "ChatId": "mycallschannel",
        "RequiredText": [
          "this needs to be in the announcement",
          "poocoin"
        ],
        "ExcludeText": [],
        "ParametersSet": "shitcoin",
        "AddToWatchList": true,
        "StopWatchListCheckingAfterMinutes": 30
      },
      {
        "RuleName": "some private group",
        "ChatId": "123123123",
        "AdminsOnly": true,
        "IgnoreBots": true,
        "SolveMathExpressions": true,
        "IgnoreBlankSpace": true,
        "UseAddressNumber": 0,
        "RequiredText": [
          "this needs to be in the announcement",
        ],
        "ExcludeText": [],
        "ParametersSet": "default",
        "AddToWatchList": true,
        "StopWatchListCheckingAfterMinutes": 60
      }
    ],
    "TransactionSniperConfiguration": [
      {
        "RuleName": "TestRule",
        "Action": "buy",
        "Origin": "mempool",
        "From": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef00",
        "FromIn": [
          "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef01",
          "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef02",
          "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef03"
        ],
        "To": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef04",
        "ToIn": [
          "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef05",
          "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef06",
        ],
        "MethodByteSignatureIs": "0x8a8c523c",
        "MethodTextSignatureIs": "registerUserToken(address,bytes32,uint8,bytes32,bytes32,address,uint256)",
        "Token": "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
        "TokenFromInputOffset": 418,
        "Input": [
          {
            "Offset": 418,
            "Length": 40,
            "Is": "0x123123123",
            "IsNot": "123123123",
            "IsLessThan": "0x123",
            "IsGreaterThan": "0x123",
            "IsLessThanOrEqual": "0x123",
            "IsGreaterThanOrEqual": "0x123",
            "IsIn": [
              "0x123123123",
              "1123123123"
            ],
            "IsNotIn": [
              "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
              "0x55d398326f99059ff775485246999027b3197955",
              "e9e7cea3dedca5984780bafc599bd69add087d56",
              "bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
              "8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
            ]
          },
        ],
        "GasPriceFromTxAdjustment": -1,
        "ParametersSet": "mempool",
        "AddToWatchList": true,
        "RemoveFromWatchListAfterMinutes": 0
      },
      {
        // This rule would buy any token that recieves
        // a enableTrading() transaction
        "RuleName": "BuyOnEnableTrading",
        "Action": "buy",
        "Origin": "mempool",
        "MethodTextSignatureIs": "enableTrading()",
        "TokenFromToAddress": true,
        "ParametersSet": "mempool",
        "GasPriceFromTxAdjustment": 0
      },
      {
        // Buy token "0xABCDEF...0123456789" when 
        // transfer and hold limits are set above
        // certain amounts
        "RuleName": "BuyOnSetLimits",
        "Action": "buy",
        "Origin": "block",
        "ToIs": "0xABCDEF...0123456789",
        "MethodTextSignatureIs": "Set_Limits_For_Wallets(uint256,uint256)",
        "Input": [
          {
            "Offset": 8,
            "Length": 64,
            "IsGreaterThan": "0x10000000"
          },
          {
            "Offset": 72,
            "Length": 64,
            "IsGreaterThan": "0x50000000"
          }
        ],
        "TokenFromToAddress": true
      },
      {
        // Sells token "0xABCDEF...0123456789" when 
        // transfer and hold limits are set below
        // a certain amount, trying to frontrun the operation
        "RuleName": "SellOnSetLimits",
        "Action": "sell",
        "Origin": "mempool",
        "ToIs": "0xABCDEF...0123456789",
        "MethodTextSignatureIs": "Set_Limits_For_Wallets(uint256,uint256)",
        "Input": [
          {
            "Offset": 8,
            "Length": 64,
            "IsLessThan": "0x10000000"
          }
        ],
        "TokenFromToAddress": true,
        "ParametersSet": "mempool",
        "GasPriceFromTxAdjustment": 50
      },
      {
        "RuleName": "Mirror Buy - Address using a custom contract",
        "Action": "buy",
        "Origin": "block",
        "From": "0xabcdef0123456789abcdef0123456789abcdef01",
        "MethodByteSignatureIs": "0xabababab",
        "TokenFromApprovalEvent": true,
        "ParametersSet": "default"
      },
      {
        "RuleName": "Mirror Sell - Address using one of the standard methods",
        "Action": "sell",
        "Origin": "mempool",
        "From": "0x0123456789abcdef0123456789abcdef01234567",
        "MethodTextSignatureIs": "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
        "TokenFromTransferEvent": true,
        "ParametersSet": "default"
      }
    ],
    "EventSniperConfiguration": [
      {
        "RuleName": "Mirror Buy From Transfer Event",
        "Action": "buy",
        "Topic0Is": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", // Transfer
        "Topic2Is": "0x0000000000000000000000000000000123456789abcdef0123456789abcdef01", // To
        "TokenFromAddress": true,
        "ParametersSet": "shitcoin"
      },
      {
        "RuleName": "Mirror Sell From Transfer Event",
        "Action": "sell",
        "Topic0Is": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", //Transfer
        "Topic1Is": "0x0000000000000000000000000000000123456789abcdef0123456789abcdef01", // From
        "TokenFromAddress": true
      },
      {
        "RuleName": "Mirror Buy From Transfer Event With Further Conditions",
        "Action": "buy",
        "Topic0Is": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", // Transfer
        "Topic2Is": "0x0000000000000000000000000000000123456789abcdef0123456789abcdef01", // To
        "ProcessTransaction": true
      }
    ],
    // Additional Settings
    "LogParametersSets": false,
    "RunNodeLatencyTest": false,
    "LogProcessedBlocks": false,
    "KeepAliveSeconds": 60,
    "CheckSeen": false,
    "BuySeen": false,
    "DeadWallets": [
      "0x000000000000000000000000000000000000dEaD",
      "0x0000000000000000000000000000000000000000",
      "0x0000000000000000000000000000000000000001"
    ]
  },
  "Logging": {
    "LogLevel": {
      "Default": "Warning",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Console",
      "Serilog.Sinks.File"
    ],
    "MinimumLevel": "Debug",
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "[{Timestamp:HH:mm:ss.fff} {Level:u3}] {Message:lj} {NewLine}{Exception}"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "Sniper-.log",
          "rollingInterval": "Day"
        }
      }
    ],
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithThreadId"
    ],
    "Properties": {
      "Application": "EclecticTokenSniper"
    }
  }
}
